#!/bin/bash

. /etc/predictionio/pio-env.sh

# check elasticsearch status
if [ x"$PIO_STORAGE_SOURCES_ELASTICSEARCH_TYPE" != "x" ] ; then
  RET=-1
  COUNT=0
  ES_HOST=`echo $PIO_STORAGE_SOURCES_ELASTICSEARCH_HOSTS | sed -e "s/,.*//"`
  ES_PORT=`echo $PIO_STORAGE_SOURCES_ELASTICSEARCH_PORTS | sed -e "s/,.*//"`
  # Wait for elasticsearch startup
  while [ $RET != 0 -a $COUNT -lt 10 ] ; do
    echo "Waiting for ${ES_HOST}..."
    curl --connect-timeout 60 --retry 10 -s "$ES_HOST:$ES_PORT/_cluster/health?wait_for_status=green&timeout=1m"
    RET=$?
    COUNT=`expr $COUNT + 1`
    sleep 1
  done
fi

# Check PIO status
RET=-1
COUNT=0
while [ $RET != 0 -a $COUNT -lt 10 ] ; do
  echo "Waiting for PredictionIO..."
  $PIO_HOME/bin/pio status
  RET=$?
  COUNT=`expr $COUNT + 1`
  sleep 1
done


if [ x"$PIO_RUN_FILE" != "x" ] ; then
  sh $PIO_RUN_FILE
else
  # Start PIO Event Server
  $PIO_HOME/bin/pio eventserver
fi

